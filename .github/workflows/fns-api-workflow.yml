name: FlexNetSim API Workflow

on:
  # Run on pushes to any branch
  push:
    branches:
      - '**'
  # Run on pull requests to these branches
  pull_request:
    branches:
      - master
      - develop
  # Allow manual trigger
  workflow_dispatch:

# Permissions needed for GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job 1: Run tests and generate coverage report
  test-coverage:
    name: Run Tests with Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with coverage
        run: |
          pytest --cov=backend --cov-report=html tests/

      - name: Prepare coverage report for GitHub Pages
        run: |
          mkdir -p public/coverage
          mv htmlcov/* public/coverage/

      - name: Upload static files as artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: './public'
        

  # Job 2: Deploy GitHub Pages
  deploy-pages:
    name: Deploy Coverage Report
    if: github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: test-coverage
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v3
      
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Job 3: Build and push Docker image (master only)
  build-and-push-image:
    name: Build and Push Docker Image
    needs: test-coverage
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Google Cloud Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Set up Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: latest
          project_id: ${{ secrets.GOOGLE_PROJECT }}

      - name: Configure Docker to push to Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build and Push Docker image to Artifact Registry
        env:
          GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
          IMAGE_NAME: us-central1-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT }}/flex-net-sim-repo/fns-api
          IMAGE_TAG: latest
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG

  # Job 4: Deploy to Cloud Run (master only)
  deploy-to-cloud-run:
    name: Deploy to Cloud Run
    needs: build-and-push-image
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Google Cloud Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          image: us-central1-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT }}/flex-net-sim-repo/fns-api:latest
          service: fns-api-cloud-run
          region: us-central1
          project_id: ${{ secrets.GOOGLE_PROJECT }}